<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1.3 编程规范 on C&#43;&#43; 学习笔记</title>
    <link>https://kingye.me/study-cpp/docs/basic/spec/</link>
    <description>Recent content in 1.3 编程规范 on C&#43;&#43; 学习笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://kingye.me/study-cpp/docs/basic/spec/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C/C&#43;&#43; 安全规则集合</title>
      <link>https://kingye.me/study-cpp/docs/basic/spec/safe-rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/study-cpp/docs/basic/spec/safe-rules/</guid>
      <description>&lt;p&gt;来源： &lt;a href=&#34;https://github.com/Qihoo360/safe-rules&#34;&gt;Qihoo360/safe-rules&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Qihoo360/safe-rules.svg&#34; alt=&#34;Github stars&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/forks/Qihoo360/safe-rules.svg&#34; alt=&#34;Github forks&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/Qihoo360/safe-rules.svg&#34; alt=&#34;Language&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/Qihoo360/safe-rules.svg?sort=semver&#34; alt=&#34;Last Tag&#34; /&gt; &lt;img src=&#34;https://img.shields.io/github/last-commit/Qihoo360/safe-rules.svg&#34; alt=&#34;Last commit&#34; /&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;cc-安全规则集合-versionhttpsimgshieldsiobadgeversion-131-brightgreen&#34;&gt;&#xA;  C/C++ 安全规则集合 &lt;img src=&#34;https://img.shields.io/badge/version-1.3.1-brightgreen&#34; alt=&#34;Version&#34; /&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cc-%e5%ae%89%e5%85%a8%e8%a7%84%e5%88%99%e9%9b%86%e5%90%88-versionhttpsimgshieldsiobadgeversion-131-brightgreen&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Bjarne Stroustrup: “&lt;em&gt;C makes it easy to shoot yourself in the foot; C++ makes it harder, but when you do it blows your whole leg off.&lt;/em&gt;”&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;  针对 C、C++ 语言，本文收录了 467 种需要重点关注的问题，可为制定编程规范提供依据，也可为代码审计以及相关培训提供指导意见，适用于桌面、服务端以及嵌入式等软件系统。&#xA;  每个问题对应一条规则，每条规则可直接作为规范条款或审计检查点，本文是适用于不同应用场景的规则集合，读者可根据自身需求从中选取某个子集作为规范或审计依据，从而提高软件产品的安全性。&#xA;&lt;br/&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;规则说明&#34;&gt;&#xA;  规则说明&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%a7%84%e5%88%99%e8%af%b4%e6%98%8e&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;规则按如下主题分为 17 个类别：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__security&#34;&gt;Security&lt;/a&gt;：敏感信息防护&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__resource&#34;&gt;Resource&lt;/a&gt;：资源管理&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__precompile&#34;&gt;Precompile&lt;/a&gt;：预处理、宏、注释&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__global&#34;&gt;Global&lt;/a&gt;：全局及命名空间作用域&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__type&#34;&gt;Type&lt;/a&gt;：类型设计与实现&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__declaration&#34;&gt;Declaration&lt;/a&gt;：声明&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__exception&#34;&gt;Exception&lt;/a&gt;：异常&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__function&#34;&gt;Function&lt;/a&gt;：函数实现&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__control&#34;&gt;Control&lt;/a&gt;：流程控制&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__expression&#34;&gt;Expression&lt;/a&gt;：表达式&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__literal&#34;&gt;Literal&lt;/a&gt;：常量&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__cast&#34;&gt;Cast&lt;/a&gt;：类型转换&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__buffer&#34;&gt;Buffer&lt;/a&gt;：缓冲区&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__pointer&#34;&gt;Pointer&lt;/a&gt;：指针&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__interruption&#34;&gt;Interruption&lt;/a&gt;：中断与信号处理&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__concurrency&#34;&gt;Concurrency&lt;/a&gt;：异步与并发&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#__style&#34;&gt;Style&lt;/a&gt;：样式与风格&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;每条规则包括：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
