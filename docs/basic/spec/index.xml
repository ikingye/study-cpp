<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1.3 编程规范 on C++ 学习笔记</title><link>https://kingye.me/study-cpp/docs/basic/spec/</link><description>Recent content in 1.3 编程规范 on C++ 学习笔记</description><generator>Hugo</generator><language>en</language><atom:link href="https://kingye.me/study-cpp/docs/basic/spec/index.xml" rel="self" type="application/rss+xml"/><item><title>C/C++ 安全规则集合</title><link>https://kingye.me/study-cpp/docs/basic/spec/safe-rules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-cpp/docs/basic/spec/safe-rules/</guid><description>&lt;p&gt;来源： &lt;a href="https://github.com/Qihoo360/safe-rules"&gt;Qihoo360/safe-rules&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/Qihoo360/safe-rules.svg" alt="Github stars" /&gt; &lt;img src="https://img.shields.io/github/forks/Qihoo360/safe-rules.svg" alt="Github forks" /&gt; &lt;img src="https://img.shields.io/github/languages/top/Qihoo360/safe-rules.svg" alt="Language" /&gt; &lt;img src="https://img.shields.io/github/v/tag/Qihoo360/safe-rules.svg?sort=semver" alt="Last Tag" /&gt; &lt;img src="https://img.shields.io/github/last-commit/Qihoo360/safe-rules.svg" alt="Last commit" /&gt;&lt;/p&gt;
&lt;h1 id="cc-安全规则集合-version"&gt;
 C/C++ 安全规则集合 &lt;img src="https://img.shields.io/badge/version-1.3.1-brightgreen" alt="Version" /&gt;
 
 &lt;a class="anchor" href="#cc-%e5%ae%89%e5%85%a8%e8%a7%84%e5%88%99%e9%9b%86%e5%90%88-version"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;

&lt;blockquote class='book-hint '&gt;
 &lt;p&gt;Bjarne Stroustrup: “&lt;em&gt;C makes it easy to shoot yourself in the foot; C++ makes it harder, but when you do it blows your whole leg off.&lt;/em&gt;”&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;  针对 C、C++ 语言，本文收录了 467 种需要重点关注的问题，可为制定编程规范提供依据，也可为代码审计以及相关培训提供指导意见，适用于桌面、服务端以及嵌入式等软件系统。
  每个问题对应一条规则，每条规则可直接作为规范条款或审计检查点，本文是适用于不同应用场景的规则集合，读者可根据自身需求从中选取某个子集作为规范或审计依据，从而提高软件产品的安全性。
&lt;br/&gt;&lt;/p&gt;
&lt;h2 id="规则说明"&gt;
 规则说明
 
 &lt;a class="anchor" href="#%e8%a7%84%e5%88%99%e8%af%b4%e6%98%8e"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;规则按如下主题分为 17 个类别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#__security"&gt;Security&lt;/a&gt;：敏感信息防护&lt;/li&gt;
&lt;li&gt;&lt;a href="#__resource"&gt;Resource&lt;/a&gt;：资源管理&lt;/li&gt;
&lt;li&gt;&lt;a href="#__precompile"&gt;Precompile&lt;/a&gt;：预处理、宏、注释&lt;/li&gt;
&lt;li&gt;&lt;a href="#__global"&gt;Global&lt;/a&gt;：全局及命名空间作用域&lt;/li&gt;
&lt;li&gt;&lt;a href="#__type"&gt;Type&lt;/a&gt;：类型设计与实现&lt;/li&gt;
&lt;li&gt;&lt;a href="#__declaration"&gt;Declaration&lt;/a&gt;：声明&lt;/li&gt;
&lt;li&gt;&lt;a href="#__exception"&gt;Exception&lt;/a&gt;：异常&lt;/li&gt;
&lt;li&gt;&lt;a href="#__function"&gt;Function&lt;/a&gt;：函数实现&lt;/li&gt;
&lt;li&gt;&lt;a href="#__control"&gt;Control&lt;/a&gt;：流程控制&lt;/li&gt;
&lt;li&gt;&lt;a href="#__expression"&gt;Expression&lt;/a&gt;：表达式&lt;/li&gt;
&lt;li&gt;&lt;a href="#__literal"&gt;Literal&lt;/a&gt;：常量&lt;/li&gt;
&lt;li&gt;&lt;a href="#__cast"&gt;Cast&lt;/a&gt;：类型转换&lt;/li&gt;
&lt;li&gt;&lt;a href="#__buffer"&gt;Buffer&lt;/a&gt;：缓冲区&lt;/li&gt;
&lt;li&gt;&lt;a href="#__pointer"&gt;Pointer&lt;/a&gt;：指针&lt;/li&gt;
&lt;li&gt;&lt;a href="#__interruption"&gt;Interruption&lt;/a&gt;：中断与信号处理&lt;/li&gt;
&lt;li&gt;&lt;a href="#__concurrency"&gt;Concurrency&lt;/a&gt;：异步与并发&lt;/li&gt;
&lt;li&gt;&lt;a href="#__style"&gt;Style&lt;/a&gt;：样式与风格&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;每条规则包括：&lt;/p&gt;</description></item></channel></rss>